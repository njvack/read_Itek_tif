#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (c) 2017 Board of Regents of the University of Wisconsin System
# Written by Nathan Vack <njvack@wisc.edu>

"""Usage: itek_hdf5_clip_stats [options] <hdf5_file>...

Files are expected to be in the format generated by itf2hdf5. For each channel
in each listed file, generate an output line like:

FILENAME    CHANNEL     PERCENT_CLIPPED

Options:
  -v --verbose           Show debugging output

"""

import sys
import csv
import logging

import h5py

from read_itek import __version__ as VERSION
from read_itek.vendor.docopt import docopt
from read_itek import reader

logging.basicConfig(level=logging.DEBUG, format='%(message)s')
logger = logging.getLogger()
logger.setLevel(logging.INFO)


HEADER = ['filename', 'channel', 'percent_clipped']


def main():
    args = docopt(__doc__, version="read_itek {}".format(VERSION))
    if args['--verbose']:
        logger.setLevel(logging.DEBUG)
    logger.debug(args)
    writer = csv.writer(sys.stdout, delimiter='\t')
    writer.writerow(HEADER)
    for filename in args['<hdf5_file>']:
        try:
            report_clip_stats(filename, writer)
        except (IOError, KeyError) as e:
            writer.writerow([filename, 'error', e.message])


def report_clip_stats(filename, writer):
    f = h5py.File(filename, 'r')
    for chan in f['/channels'].items():
        pass


if __name__ == '__main__':
    main()
